version: 0.2

env:
  variables: 
    X: Y   
#    SUBSCRIBER_IMAGE_TAG_VERSION: NODEPLOY_b9a25d453a81ba655ccffbe9ac9ca433af5c8af6

phases:
  install:
    commands:
      - echo Installing Helm CLI...
      - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
      - chmod 700 get_helm.sh
      - ./get_helm.sh
      - curl -sS -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/kubectl
      - curl -o kubectl.sha256 https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/kubectl.sha256
      - openssl sha1 -sha256 kubectl
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - chmod +x ./kubectl
      - export PATH=$PWD/:$PATH
  
  pre_build: # Add kubeconfig to access EKS cluster
    commands:
      - "mkdir ~/.kube"
  
  post_build:
    commands:
    # TODO: Refactor for Different environments
        - CREDENTIALS=$(aws sts assume-role --role-arn "arn:aws:iam::363145861140:role/uopx-k8-nonprod-st-rfi-react-app-microservice-admin-role" --role-session-name codebuild-kubectl-rfi-react-app)
    
        - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
        - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
        - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
        - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
        # For troubleshooting, if needed
        # - echo $AWS_ACCESS_KEY_ID
        # - echo $AWS_SECRET_ACCESS_KEY
        # - echo $AWS_SESSION_TOKEN
        # - echo $AWS_EXPIRATION
        ## TODO: Refactor following cp for other environments
        - cp -f kubeconfig-st ~/.kube/config
        - echo "$(< ~/.kube/config)"
        - pwd 
        # - du -sh $CODEBUILD_SRC_DIR
        # - ls -ltr $CODEBUILD_SRC_DIR
        # Why do we need to do following command ?
        - rm -rf kubectl*
        - ls -ltr $CODEBUILD_SRC_DIR
        # - helm version
        # TODO: Refactor for other environments.
        - helm upgrade --force --debug --dry-run -i rfi-react-app-microservice ./ -f ./values-st.yaml --namespace rfi-react-app-microservice
        #- helm install -i rfi-react-app-microservice ./ -f ./values-st.yaml --namespace rfi-react-app-microservice